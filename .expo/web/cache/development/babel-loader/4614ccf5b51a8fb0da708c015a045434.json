{"ast":null,"code":"var _jsxFileName = \"/Users/servonlewis/Library/Mobile Documents/com~apple~CloudDocs/Fandemic/Mobile/App.tsx\";\nimport \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Navigator } from \"./navigator\";\nimport { HttpLink, ApolloProvider, ApolloClient, InMemoryCache, split } from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\n\nfunction ComposeApp() {\n  return React.createElement(React.Fragment, null, React.createElement(Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  var httpLink = new HttpLink({\n    uri: \"http://127.0.0.1:4000\",\n    headers: {\n      authorization: \"\"\n    }\n  });\n  var wsLink = new WebSocketLink({\n    uri: \"ws://127.0.0.1:4000\",\n    options: {\n      reconnect: true,\n      connectionParams: {\n        authorization: \"\"\n      }\n    }\n  });\n  var link = split(function (_ref) {\n    var query = _ref.query;\n    var definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  }, wsLink, httpLink);\n  var client = new ApolloClient({\n    link: link,\n    cache: new InMemoryCache()\n  });\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(ComposeApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/servonlewis/Library/Mobile Documents/com~apple~CloudDocs/Fandemic/Mobile/App.tsx"],"names":["StatusBar","React","Navigator","HttpLink","ApolloProvider","ApolloClient","InMemoryCache","split","getMainDefinition","WebSocketLink","ComposeApp","App","httpLink","uri","headers","authorization","wsLink","options","reconnect","connectionParams","link","query","definition","kind","operation","client","cache"],"mappings":";AAAA,OAAO,8BAAP;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;AAGA,SACEC,QADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,KALF,QAMO,gBANP;AAOA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,SAASC,UAAT,GAAsB;AACpB,SACE,0CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;;AAED,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,QAAQ,GAAG,IAAIT,QAAJ,CAAa;AAC5BU,IAAAA,GAAG,EAAE,uBADuB;AAE5BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR;AAFmB,GAAb,CAAjB;AAOA,MAAMC,MAAM,GAAG,IAAIP,aAAJ,CAAkB;AAC/BI,IAAAA,GAAG,uBAD4B;AAE/BI,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE,IADJ;AAEPC,MAAAA,gBAAgB,EAAE;AAChBJ,QAAAA,aAAa,EAAE;AADC;AAFX;AAFsB,GAAlB,CAAf;AAUA,MAAMK,IAAI,GAAGb,KAAK,CAChB,gBAAe;AAAA,QAAZc,KAAY,QAAZA,KAAY;AACb,QAAMC,UAAU,GAAGd,iBAAiB,CAACa,KAAD,CAApC;AACA,WACEC,UAAU,CAACC,IAAX,KAAoB,qBAApB,IACAD,UAAU,CAACE,SAAX,KAAyB,cAF3B;AAID,GAPe,EAQhBR,MARgB,EAShBJ,QATgB,CAAlB;AAYA,MAAMa,MAAM,GAAG,IAAIpB,YAAJ,CAAiB;AAC9Be,IAAAA,IAAI,EAAJA,IAD8B;AAE9BM,IAAAA,KAAK,EAAE,IAAIpB,aAAJ;AAFuB,GAAjB,CAAf;AAKA,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEmB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Navigator } from \"./navigator\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { Routes } from \"./routes\";\nimport {\n  HttpLink,\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  split,\n} from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\n\nfunction ComposeApp() {\n  return (\n    <>\n      <Navigator />\n      <StatusBar />\n    </>\n  );\n}\n\nexport default function App() {\n  const httpLink = new HttpLink({\n    uri: \"http://127.0.0.1:4000\",\n    headers: {\n      authorization: \"\",\n    },\n  });\n\n  const wsLink = new WebSocketLink({\n    uri: `ws://127.0.0.1:4000`,\n    options: {\n      reconnect: true,\n      connectionParams: {\n        authorization: \"\",\n      },\n    },\n  });\n\n  const link = split(\n    ({ query }) => {\n      const definition = getMainDefinition(query);\n      return (\n        definition.kind === \"OperationDefinition\" &&\n        definition.operation === \"subscription\"\n      );\n    },\n    wsLink,\n    httpLink\n  );\n\n  const client = new ApolloClient({\n    link,\n    cache: new InMemoryCache(),\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <ComposeApp />\n    </ApolloProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}